import{_ as h,c as r,b as i,a as t,e as a,d as e,w as l,r as k,o as d}from"./app-1dhAU6lT.js";const o={},g={class:"code-block-title","data-title":"CMakeLists.txt"},c={class:"code-block-title-bar"},y={class:"title"},m={class:"code-block-title","data-title":"hello_test.cc"},A={class:"code-block-title-bar"},D={class:"title"},C={class:"code-block-title","data-title":"CMakeLists.txt"},u={class:"code-block-title-bar"},f={class:"title"};function E(b,s){const n=k("VPLink"),p=k("VPIcon");return d(),r("div",null,[i("p",null,[s[1]||(s[1]=a("本教程旨在帮助你使用 CMake 快速上手 GoogleTest。 如果你是第一次使用 GoogleTest 或需要复习，我们推荐你从本教程开始。 如果你的项目使用 Bazel，请参阅",-1)),e(n,{href:"quickstart-bazel.md"},{default:l(()=>s[0]||(s[0]=[a("快速开始：Bazel",-1)])),_:1,__:[0]}),s[2]||(s[2]=a("。",-1))]),s[19]||(s[19]=t('<h2 id="先决条件" tabindex="-1"><a class="header-anchor" href="#先决条件"><span>先决条件</span></a></h2><p>要完成本教程，你需要：</p><ul><li><p>一个兼容的操作系统（例如 Linux、macOS、Windows）。</p></li><li><p>一个兼容的 C++ 编译器，至少支持 C++14。</p></li><li><p><a href="https://cmake.org/" target="_blank" rel="noopener noreferrer">CMake</a> 和一个兼容的构建工具来构建项目。</p><p>兼容的构建工具包括 <a href="https://www.gnu.org/software/make/" target="_blank" rel="noopener noreferrer">Make</a>、<a href="https://ninja-build.org/" target="_blank" rel="noopener noreferrer">Ninja</a> 等 ——更多信息请参阅 <a href="https://cmake.org/cmake/help/latest/manual/cmake-generators.7.html" target="_blank" rel="noopener noreferrer">CMake 生成器</a>。</p></li></ul>',3)),i("p",null,[s[4]||(s[4]=a("有关与 GoogleTest 兼容的平台的更多信息，请参阅",-1)),e(n,{href:"platforms.md"},{default:l(()=>s[3]||(s[3]=[a("支持的平台",-1)])),_:1,__:[3]}),s[5]||(s[5]=a("。",-1))]),s[20]||(s[20]=t('<p>如果你尚未安装 CMake，请参阅 <a href="https://cmake.org/install" target="_blank" rel="noopener noreferrer">CMake 安装指南</a>。</p><div class="hint-container note"><p class="hint-container-title">注</p><p>本教程中的终端命令均采用 Unix shell 格式。</p></div><h2 id="设置项目" tabindex="-1"><a class="header-anchor" href="#设置项目"><span>设置项目</span></a></h2><p>CMake 使用名为 <code>CMakeLists.txt</code> 的文件来配置项目的构建。 你将使用此文件来设置项目并声明对 GoogleTest 的依赖。</p><p>首先，为你的项目创建一个目录：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mkdir</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> my_project</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> &amp;&amp;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> my_project</span></span></code></pre></div><p>接下来，创建 <code>CMakeLists.txt</code> 文件并声明对 GoogleTest 的依赖。 在 CMake 生态中有许多表达依赖的方式，本指南将使用 <a href="https://cmake.org/cmake/help/latest/module/FetchContent.html" target="_blank" rel="noopener noreferrer">CMake 的 <code>FetchContent</code> 模块</a>。 为此，在你的项目目录中创建一个名为 <code>CMakeLists.txt</code> 的文件，内容如下：</p>',7)),i("div",g,[i("div",c,[i("span",y,[e(p,{provider:"iconify",name:"vscode-icons:file-type-text"}),s[6]||(s[6]=a("CMakeLists.txt",-1))])]),s[7]||(s[7]=t(`<div class="language-cmake" data-highlighter="shiki" data-ext="cmake" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-cmake"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">cmake_minimum_required</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">VERSION</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> 3.14)</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">project</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(my_project)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># GoogleTest 要求至少 C++14</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">set</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(CMAKE_CXX_STANDARD 14)</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">set</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(CMAKE_CXX_STANDARD_REQUIRED </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">ON</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">include</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(FetchContent)</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">FetchContent_Declare(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  googletest</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  URL https://github.com/google/googletest/archive/03597a01ee50ed33e9dfd640b249b4be3799d395.zip</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">set</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(gtest_force_shared_crt </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">ON</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> CACHE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> BOOL</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &quot;&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> FORCE) </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 针对 Windows：防止覆盖父项目的编译器/链接器设置</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">FetchContent_MakeAvailable(googletest)</span></span></code></pre></div>`,1))]),s[21]||(s[21]=t('<p>上述配置声明了对 GoogleTest 的依赖，该依赖将从 GitHub 上下载。 <code>03597a01ee50ed33e9dfd640b249b4be3799d395</code> 是我们要使用的 GoogleTest 版本的 Git 提交哈希。 我们建议经常性更新该哈希值以指向最新版本。</p><p>有关如何创建 <code>CMakeLists.txt</code> 文件的更多信息，请参阅 <a href="https://cmake.org/cmake/help/latest/guide/tutorial/index.html" target="_blank" rel="noopener noreferrer">CMake 教程</a>。</p><h2 id="创建并运行测试" tabindex="-1"><a class="header-anchor" href="#创建并运行测试"><span>创建并运行测试</span></a></h2><p>声明了对 GoogleTest 的依赖后，你现在可以在项目中使用 GoogleTest。</p><p>作为一个示例，在你的 <code>my_workspace</code> 目录中创建一个名为 <code>hello_test.cc</code> 的文件，内容如下：</p>',5)),i("div",m,[i("div",A,[i("span",D,[e(p,{provider:"iconify",name:"vscode-icons:file-type-cpp"}),s[8]||(s[8]=a("hello_test.cc",-1))])]),s[9]||(s[9]=t(`<div class="language-cpp" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">#</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">include</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">gtest/gtest.h</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 演示一些基本的断言。</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">TEST</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">HelloTest</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> BasicAssertions</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 期望两个字符串不相等。</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    EXPECT_STRNE</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">hello</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">world</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 期望相等。</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    EXPECT_EQ</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">7</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 6</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 42</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre></div>`,1))]),i("p",null,[s[11]||(s[11]=a("GoogleTest 为你提供了",-1)),e(n,{href:"primer.md#assertions"},{default:l(()=>s[10]||(s[10]=[a("断言（",-1),i("em",null,"assertion",-1),a("）",-1)])),_:1,__:[10]}),s[12]||(s[12]=a("来测试代码的行为。 上面的示例中包含了 GoogleTest 的主头文件，并演示了一些基本的断言。",-1))]),s[22]||(s[22]=i("p",null,[a("要构建代码，请在你的 "),i("code",null,"CMakeLists.txt"),a(" 文件末尾添加以下内容：")],-1)),i("div",C,[i("div",u,[i("span",f,[e(p,{provider:"iconify",name:"vscode-icons:file-type-text"}),s[13]||(s[13]=a("CMakeLists.txt",-1))])]),s[14]||(s[14]=t(`<div class="language-cmake" data-highlighter="shiki" data-ext="cmake" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-cmake"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">enable_testing</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">add_executable</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  hello_test</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  hello_test.cc</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">target_link_libraries</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  hello_test</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  GTest::gtest_main</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">include</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(GoogleTest)</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">gtest_discover_tests(hello_test)</span></span></code></pre></div>`,1))]),s[23]||(s[23]=t(`<p>:::</p><p>上述配置在 CMake 中启用了测试，声明了你要构建的 C++ 测试（<code>hello_test</code>），并将其链接到 GoogleTest（<code>gtest_main</code>）。 最后两行启用了 CMake 的测试运行器， 使用 <a href="https://cmake.org/cmake/help/git-stage/module/GoogleTest.html" target="_blank" rel="noopener noreferrer">CMake 的 <code>GoogleTest</code> 模块</a>来发现项目中包含的测试。</p><p>现在你可以构建并运行你的测试：</p><div class="language-ansi" data-highlighter="shiki" data-ext="ansi" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-ansi"><span class="line"><span style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;">$ cmake -S . -B build</span></span>
<span class="line"><span style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;">-- The C compiler identification is GNU 10.2.1</span></span>
<span class="line"><span style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;">-- The CXX compiler identification is GNU 10.2.1</span></span>
<span class="line"><span style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;">...</span></span>
<span class="line"><span style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;">-- Build files have been written to: .../my_project/build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;">$ cmake --build build</span></span>
<span class="line"><span style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;">Scanning dependencies of target gtest</span></span>
<span class="line"><span style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;">...</span></span>
<span class="line"><span style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;">[100%] Built target gmock_main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;">$ cd build &amp;&amp; ctest</span></span>
<span class="line"><span style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;">Test project .../my_project/build</span></span>
<span class="line"><span style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;">Start 1: HelloTest.BasicAssertions</span></span>
<span class="line"><span style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;">1/1 Test #1: HelloTest.BasicAssertions ........ Passed 0.00 sec</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;">100% tests passed, 0 tests failed out of 1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;">Total Test time (real) = 0.01 sec</span></span></code></pre></div><p>恭喜！你成功使用 GoogleTest 构建并运行了一个测试。</p><h2 id="下一步" tabindex="-1"><a class="header-anchor" href="#下一步"><span>下一步</span></a></h2>`,6)),i("ul",null,[i("li",null,[i("p",null,[e(n,{href:"primer.md"},{default:l(()=>s[15]||(s[15]=[a("初学者指南",-1)])),_:1,__:[15]}),s[16]||(s[16]=a("：开始学习如何编写简单的测试。",-1))])]),i("li",null,[i("p",null,[e(n,{href:"samples.md"},{default:l(()=>s[17]||(s[17]=[a("代码示例",-1)])),_:1,__:[17]}),s[18]||(s[18]=a("：获取更多使用各种 GoogleTest 功能的示例。",-1))])])])])}const v=h(o,[["render",E]]),T=JSON.parse('{"path":"/gtest/quickstart-cmake/","title":"快速开始：CMake","lang":"zh-CN","frontmatter":{"title":"快速开始：CMake","createTime":"2025/03/04 11:27:36","permalink":"/gtest/quickstart-cmake/","copyright":{"creation":"translate","source":"https://google.github.io/googletest/quickstart-cmake.html"},"description":"本教程旨在帮助你使用 CMake 快速上手 GoogleTest。 如果你是第一次使用 GoogleTest 或需要复习，我们推荐你从本教程开始。 如果你的项目使用 Bazel，请参阅。 先决条件 要完成本教程，你需要： 一个兼容的操作系统（例如 Linux、macOS、Windows）。 一个兼容的 C++ 编译器，至少支持 C++14。 CMake...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"快速开始：CMake\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-22T11:27:50.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://sunirein.tech/gtest/quickstart-cmake/"}],["meta",{"property":"og:site_name","content":"SuniRein 的个人小站"}],["meta",{"property":"og:title","content":"快速开始：CMake"}],["meta",{"property":"og:description","content":"本教程旨在帮助你使用 CMake 快速上手 GoogleTest。 如果你是第一次使用 GoogleTest 或需要复习，我们推荐你从本教程开始。 如果你的项目使用 Bazel，请参阅。 先决条件 要完成本教程，你需要： 一个兼容的操作系统（例如 Linux、macOS、Windows）。 一个兼容的 C++ 编译器，至少支持 C++14。 CMake..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-22T11:27:50.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-22T11:27:50.000Z"}]]},"readingTime":{"minutes":2.96,"words":887},"git":{"createdTime":1741072013000,"updatedTime":1745321270000,"contributors":[{"name":"SuniRein","username":"SuniRein","email":"sunirein@qq.com","commits":6,"avatar":"https://avatars.githubusercontent.com/SuniRein?v=4","url":"https://github.com/SuniRein"}]},"autoDesc":true,"filePathRelative":"notes/GoogleTest/quickstart-cmake.md","headers":[]}');export{v as comp,T as data};
