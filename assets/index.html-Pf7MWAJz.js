import{_ as k,c as p,a as l,d,w as e,r as g,o as r,b as i,e as a}from"./app-1dhAU6lT.js";const c="/assets/github-sign-CDYccgDE.avif",o={};function b(f,s){const n=g("Tabs");return r(),p("div",null,[s[4]||(s[4]=l('<p>之前在 Github 上为某个开源项目提交 PR 的时候，发现那个项目开启了签名验证，要求提交必须经过签名。 这是我第一次知道 Git 有签名功能，就去了解了一下它是什么，以及如何设置，于是写下了这篇文章。</p><h2 id="什么是签名" tabindex="-1"><a class="header-anchor" href="#什么是签名"><span>什么是签名？</span></a></h2><p>大家平时在 Github 上查看提交信息时，应该会注意到，在提交列表里有些提交上面会显示一个 <code>Verified</code> 状态。 这表示其经过签名且被 Github 验证通过。</p><p><img src="'+c+`" alt="Github 签名"></p><p>签名是 Git 的一项安全机制，用于验证提交是由用户本人发起的。 用户可以在本地对 Commit 和标签进行签名，经过验证的签名便会在 Github 在被显示为 <code>Verified</code> 状态。</p><div class="hint-container info"><p class="hint-container-title">签名的必要性</p><p>由于 Git 允许用户任意设置提交者的身份，因此签名是 Git 提供的一项用于验证提交者身份的重要工具。 不过，诸如 Github、Gitlab 这些网站本身已经提供了一套足够安全的用户账号机制。 对于仅部署在这些网站上的项目来说，实际上也没有开启该机制的必要。</p><p>只是由于部分开源项目对签名有要求，因此平时提交时还是建议开启签名。</p></div><h2 id="生成签名" tabindex="-1"><a class="header-anchor" href="#生成签名"><span>生成签名</span></a></h2><p>Git 为个人用户提供了 GPG 和 SSH 两种签名方式。</p><h3 id="gpg" tabindex="-1"><a class="header-anchor" href="#gpg"><span>GPG</span></a></h3><p>在命令行键入下列命令即可创建 GPG 签名：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">gpg</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --full-generate-key</span></span></code></pre></div><p>之后按照提示，依次输入密钥类型、密钥大小、有效期、用户信息等信息。 注意这里的用户信息应该与你在 Git 中设置的信息一致。</p><p>最后再输入使用该密钥所需的安全密钥，在每次使用该密钥时 GPG 都会要求你键入该安全密钥。</p><p>密钥生成完后可以使用下面的命令来查看已经生成的密钥：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">gpg</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --list-secret-keys</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --keyid-format=long</span></span></code></pre></div><p>生成的密钥类似下面这样：</p><div class="language-ansi" data-highlighter="shiki" data-ext="ansi" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-ansi"><span class="line"><span style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;">pub   ed25519/EFBD20CF51E1A4A0 2025-08-17 [SC]</span></span>
<span class="line"><span style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;">      C53C71B1F960AFD0DD770485EFBD90CF51E1A4A0</span></span>
<span class="line"><span style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;">uid                      User &lt;email@example.com&gt;</span></span>
<span class="line"><span style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;">sub   cv25519/1F3FD0F56C3D54B3 2025-08-17 [E]</span></span></code></pre></div><p>这里 <code>EFBD20CF51E1A4A0</code> 是该密钥的 ID。输入下列命令，替换相应的密钥 ID，以获取完整的 GPG 密钥：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">gpg</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --armor</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --export</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> EFBD20CF51E1A4A0</span></span></code></pre></div><p>之后打开 <a href="https://github.com/settings/keys" target="_blank" rel="noopener noreferrer">Github</a>，将生成的 GPG 密钥上传到你的账户，这样 Github 才会信任这个签名。</p><h3 id="ssh" tabindex="-1"><a class="header-anchor" href="#ssh"><span>SSH</span></a></h3><p>SSH 签名的生成较为简单，替换下面的邮箱为你实际使用的邮箱即可：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ssh-keygen</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -t</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ed25519</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -C</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">your_email@example.com</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre></div><p>如果你已经使用 SSH 生成过签名，这里 SSH 会提示你键入新的文件来保存签名，请记住这个文件的位置。</p><p>之后同样需要将签名上传到 <a href="https://github.com/settings/keys" target="_blank" rel="noopener noreferrer">Github</a> 上， 注意 SSH 密钥那一栏要选择 <code>Signing Key</code> 而不是 <code>Authentication Key</code>。</p><div class="hint-container note"><p class="hint-container-title">注</p><p>你也可以复用已经生成的 <code>Authentication Key</code>，但是需要将该密钥重复上传一次，设置为 <code>Signing Key</code>。</p></div><h2 id="设置-git-使用签名" tabindex="-1"><a class="header-anchor" href="#设置-git-使用签名"><span>设置 Git 使用签名</span></a></h2>`,27)),d(n,{id:"80",data:[{id:"GPG"},{id:"SSH"}]},{title0:e(({value:t,isActive:h})=>s[0]||(s[0]=[a("GPG",-1)])),title1:e(({value:t,isActive:h})=>s[1]||(s[1]=[a("SSH",-1)])),tab0:e(({value:t,isActive:h})=>s[2]||(s[2]=[i("p",null,[a("使用 "),i("code",null,"gpg --list-secret-keys --keyid-format=long"),a(" 命令以获取 GPG 签名的公钥和私钥 ID。 我们签名使用的 "),i("code",null,"EFBD20CF51E1A4A0"),a(" 是公钥 ID，而这里要使用私钥 ID：")],-1),i("div",{class:"language-bash","data-highlighter":"shiki","data-ext":"bash",style:{"--shiki-light":"#393a34","--shiki-dark":"#dbd7caee","--shiki-light-bg":"#ffffff","--shiki-dark-bg":"#121212"}},[i("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code"},[i("code",{class:"language-bash"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#59873A","--shiki-dark":"#80A665"}},"git"),i("span",{style:{"--shiki-light":"#B56959","--shiki-dark":"#C98A7D"}}," config"),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}}," --global"),i("span",{style:{"--shiki-light":"#B56959","--shiki-dark":"#C98A7D"}}," user.signingkey"),i("span",{style:{"--shiki-light":"#B56959","--shiki-dark":"#C98A7D"}}," 1F3FD0F56C3D54B3")])])])],-1),i("p",null,"如果你之前有配置过 GPG 签名，并使用了不同的签名格式，需要取消相应的配置：",-1),i("div",{class:"language-bash","data-highlighter":"shiki","data-ext":"bash",style:{"--shiki-light":"#393a34","--shiki-dark":"#dbd7caee","--shiki-light-bg":"#ffffff","--shiki-dark-bg":"#121212"}},[i("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code"},[i("code",{class:"language-bash"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#59873A","--shiki-dark":"#80A665"}},"git"),i("span",{style:{"--shiki-light":"#B56959","--shiki-dark":"#C98A7D"}}," config"),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}}," --global"),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}}," --unset"),i("span",{style:{"--shiki-light":"#B56959","--shiki-dark":"#C98A7D"}}," gpg.format")])])])],-1)])),tab1:e(({value:t,isActive:h})=>s[3]||(s[3]=[i("p",null,"首先我们需要告知 Git 你使用的是 SSH 密钥而非 GPG 密钥：",-1),i("div",{class:"language-bash","data-highlighter":"shiki","data-ext":"bash",style:{"--shiki-light":"#393a34","--shiki-dark":"#dbd7caee","--shiki-light-bg":"#ffffff","--shiki-dark-bg":"#121212"}},[i("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code"},[i("code",{class:"language-bash"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#59873A","--shiki-dark":"#80A665"}},"git"),i("span",{style:{"--shiki-light":"#B56959","--shiki-dark":"#C98A7D"}}," config"),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}}," --global"),i("span",{style:{"--shiki-light":"#B56959","--shiki-dark":"#C98A7D"}}," gpg.format"),i("span",{style:{"--shiki-light":"#B56959","--shiki-dark":"#C98A7D"}}," ssh")])])])],-1),i("p",null,[a("然后在 Git 中设置你的 SSH 签名密钥，这里要输入你签名生成的密钥的公钥路径（一般位于 "),i("code",null,"~/.ssh"),a(" 下方）：")],-1),i("div",{class:"language-bash","data-highlighter":"shiki","data-ext":"bash",style:{"--shiki-light":"#393a34","--shiki-dark":"#dbd7caee","--shiki-light-bg":"#ffffff","--shiki-dark-bg":"#121212"}},[i("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code"},[i("code",{class:"language-bash"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#59873A","--shiki-dark":"#80A665"}},"git"),i("span",{style:{"--shiki-light":"#B56959","--shiki-dark":"#C98A7D"}}," config"),i("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}}," --global"),i("span",{style:{"--shiki-light":"#B56959","--shiki-dark":"#C98A7D"}}," user.signingkey"),i("span",{style:{"--shiki-light":"#B56959","--shiki-dark":"#C98A7D"}}," /PATH/TO/.SSH/KEY.PUB")])])])],-1)])),_:1}),s[5]||(s[5]=l(`<h2 id="在提交时使用签名" tabindex="-1"><a class="header-anchor" href="#在提交时使用签名"><span>在提交时使用签名</span></a></h2><p>在提交时，使用 <code>-S</code> 标志对该提交进行签名：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> commit</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -S</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -m</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">COMMIT_MESSAGE</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre></div><p>如果是标签，则使用 <code>-s</code> 标志：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> tag</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -s</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> MYTAG</span></span></code></pre></div><p>如果设置成功，你便可以在 Github 上看到对应的 <code>Verified</code> 标志。</p><h3 id="自动签名" tabindex="-1"><a class="header-anchor" href="#自动签名"><span>自动签名</span></a></h3><p>如果你觉得手动签名比较麻烦，且容易遗忘，可以通过下面的配置让 Git 在提交和创建标签时自动帮你签名：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> config</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --global</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> commit.gpgsign</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> config</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --global</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> tag.gpgSign</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span></span></code></pre></div><h3 id="为已提交的-commit-签名" tabindex="-1"><a class="header-anchor" href="#为已提交的-commit-签名"><span>为已提交的 commit 签名</span></a></h3><p>有时你的 commit 已经提交，而你需要为这些提交签名。</p><p>首先找到你需要签名的最早的 commit，选择该 commit，启动交互式变基：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> rebase</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -i</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">commit-has</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">h</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span></span></code></pre></div><p>之后给该 commit 及其后面的所有 commit 签名：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> commit</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --amend</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -S</span></span></code></pre></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>使用这种方法相当于创建了新的提交，如果要上传到 Git 仓库需要加上 <code>--force</code> 标志。 如果实在没有必要，不建议使用这种方法。</p></div><h2 id="gpg-和-ssh-密钥如何选择" tabindex="-1"><a class="header-anchor" href="#gpg-和-ssh-密钥如何选择"><span>GPG 和 SSH 密钥如何选择？</span></a></h2><p>GPG 提供了更多高级的安全功能，例如密钥本身会携带用户信息、支持设置有效期等，而 SSH 则相对简单。 但两者的安全性更多取决于你使用的加密算法与密钥长度，并无优劣之分。</p><p>此外，GPG 密钥每次使用都需要用户键入相应的安全密钥，较为繁琐。 尽管有专门的工具可以帮你跳过这一过程，但配置起来也比较麻烦，不如 SSH 密钥简单。</p><p>如果你只是需要简单的签名功能以满足某些仓库的需求，配置较为简单的 SSH 密钥就已经够用了。</p><h2 id="参考文献" tabindex="-1"><a class="header-anchor" href="#参考文献"><span>参考文献</span></a></h2><ul><li><a href="https://docs.github.com/en/authentication/managing-commit-signature-verification/about-commit-signature-verification" target="_blank" rel="noopener noreferrer">About commit signature verification | GitHub Docs</a></li></ul>`,22))])}const m=k(o,[["render",b]]),u=JSON.parse('{"path":"/article/g4xq10jf/","title":"使用 GPG/SSH 为你的提交签名","lang":"zh-CN","frontmatter":{"title":"使用 GPG/SSH 为你的提交签名","createTime":"2025/08/17 14:32:43","permalink":"/article/g4xq10jf/","tags":["Git","GPG","SSH"],"description":"之前在 Github 上为某个开源项目提交 PR 的时候，发现那个项目开启了签名验证，要求提交必须经过签名。 这是我第一次知道 Git 有签名功能，就去了解了一下它是什么，以及如何设置，于是写下了这篇文章。 什么是签名？ 大家平时在 Github 上查看提交信息时，应该会注意到，在提交列表里有些提交上面会显示一个 Verified 状态。 这表示其经过...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用 GPG/SSH 为你的提交签名\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-17T07:45:28.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://sunirein.tech/article/g4xq10jf/"}],["meta",{"property":"og:site_name","content":"SuniRein 的个人小站"}],["meta",{"property":"og:title","content":"使用 GPG/SSH 为你的提交签名"}],["meta",{"property":"og:description","content":"之前在 Github 上为某个开源项目提交 PR 的时候，发现那个项目开启了签名验证，要求提交必须经过签名。 这是我第一次知道 Git 有签名功能，就去了解了一下它是什么，以及如何设置，于是写下了这篇文章。 什么是签名？ 大家平时在 Github 上查看提交信息时，应该会注意到，在提交列表里有些提交上面会显示一个 Verified 状态。 这表示其经过..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-17T07:45:28.000Z"}],["meta",{"property":"article:tag","content":"SSH"}],["meta",{"property":"article:tag","content":"GPG"}],["meta",{"property":"article:tag","content":"Git"}],["meta",{"property":"article:modified_time","content":"2025-08-17T07:45:28.000Z"}]]},"readingTime":{"minutes":4.7,"words":1410},"git":{"createdTime":1755416728000,"updatedTime":1755416728000,"contributors":[{"name":"SuniRein","username":"SuniRein","email":"sunirein@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/SuniRein?v=4","url":"https://github.com/SuniRein"}]},"autoDesc":true,"filePathRelative":"Git相关/使用GPG或SSH为你的提交签名.md","headers":[],"categoryList":[{"id":"b40d72","sort":10005,"name":"Git相关"}]}');export{m as comp,u as data};
