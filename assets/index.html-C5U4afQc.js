import{_ as d,c as p,a as l,b as n,d as e,w as i,r as o,o as r}from"./app-1dhAU6lT.js";const h={},c={class:"vp-file-tree"};function k(g,t){const a=o("VPIcon"),s=o("FileTreeNode");return r(),p("div",null,[t[1]||(t[1]=l(`<h2 id="什么是-gnu-stow" tabindex="-1"><a class="header-anchor" href="#什么是-gnu-stow"><span>什么是 GNU/Stow？</span></a></h2><blockquote><p>GNU Stow 是一个符号链接农场管理器，它可以将位于文件系统不同目录中的不同软件包和数据，伪装成安装在同一个位置。</p></blockquote><p>使用 GNU/Stow 这一简单的工具，可以帮我们实现 Linux 上的两大难题：</p><ul><li>管理手动编译安装的程序</li><li>管理复杂的用户配置文件</li></ul><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><p>各大发行版的包管理器都有 GNU/Stow，不过我更推荐直接从<a href="https://www.gnu.org/software/stow/" target="_blank" rel="noopener noreferrer">官网</a>下载源代码， 手动编译安装，以获取最新版本。</p><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><p>GNU/Stow 会自动在当前目录的上一级目录创建软链接。 例如，如果当前目录是 <code>~/dotfiles</code>，当我们运行 <code>stow bash</code> 时，GNU/Stow 会在上一级目录，即 <code>~</code> 中， 为 <code>~/dotfiles/bash</code> 中的所有文件创建软链接。 如果目标是文件夹，当对应文件夹存在时，GNU/Stow 会为文件夹下的所有文件创建软链接，否则直接创建该文件夹的软链接。</p><p>在执行具体命令前，可以使用 <code>-nv</code> 来检查将要执行的操作，而不执行这些操作。</p><p>使用 <code>--delete</code> 参数可以删除对应包的软链接。</p><p>更多的参数和用法详见<a href="https://www.gnu.org/software/stow/manual/html_node/Invoking-Stow.html" target="_blank" rel="noopener noreferrer">官方文档</a>。</p><h2 id="管理编译安装程序" tabindex="-1"><a class="header-anchor" href="#管理编译安装程序"><span>管理编译安装程序</span></a></h2><p>在 Linux 中，如果我们要手动安装一个程序，通常有两种做法：</p><ul><li>将其安装到 <code>/opt/xxx/</code> 中，并手动添加到环境目录。这可以是全局环境相对整洁，但需要手动设置大量的相关配置。</li><li>直接将其安装到 <code>/usr/local/</code> 中。这种方法最直接，不需要进行任何额外配置，但在卸载程序时较为麻烦。</li></ul><p>GNU/Stow 为我们提供了第三个选择。</p><p>这里以安装 <strong>hello</strong> 程序为例：</p><div class="vp-steps"><ol><li><p>首先创建 <code>stow</code> 文件夹：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> mkdir</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -p</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /usr/local/hello</span></span></code></pre></div></li><li><p>将程序安装到该文件夹下的对应子目录中：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark has-highlighted vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">wget</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://ftp.gnu.org/gnu/hello/hello-2.12.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">tar</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -zxvf</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> hello-2.12.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> hello-2.12</span></span>
<span class="line highlighted"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">./configure</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --prefix=/usr/local/hello</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # 这里设置安装目录</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">make</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> make</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span></span></code></pre></div></li><li><p>然后转到 <code>stow</code> 文件夹下，运行下列命令来生成相应的软链接：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /usr/local/stow</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> stow</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -v</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> hello</span></span></code></pre></div></li><li><p>如果后续需要删除该程序，只需要删除对应的软链接：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /usr/local/stow</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> stow</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --delete</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> hello</span></span></code></pre></div></li></ol></div><div class="hint-container tip"><p class="hint-container-title">使用技巧</p><ol><li>在运行相应命令前，请先使用 <code>-nv</code> 参数来查看对应的行为，避免意外情况。</li><li>由于 GNU/Stow 在遇到不存在的文件夹时会直接创建该文件夹的软链接， 推荐先在 <code>/usr/local/</code> 下创建好 <code>bin</code>、<code>lib</code>、<code>include</code>、<code>share</code>、<code>man</code> 等常见文件夹。</li></ol></div><h2 id="管理用户配置文件" tabindex="-1"><a class="header-anchor" href="#管理用户配置文件"><span>管理用户配置文件</span></a></h2><p>Linux 下用户配置文件通常以 <code>dotfiles</code> 的形式来管理。 但不同软件的配置位置通常不太一样，难以统一地管理，这时就可以借助 GNU/Stow。</p><p>例如，下面是一个配置文件的示例：</p>`,21)),n("div",c,[t[0]||(t[0]=n("p",{class:"vp-file-tree-title"},"~/dotfiles",-1)),e(s,{expanded:"",type:"folder",filename:"zsh",level:0},{icon:i(()=>[e(a,{provider:"iconify",name:"vscode-icons:default-folder"})]),default:i(()=>[e(s,{type:"file",filename:".zshrc",level:1},{icon:i(()=>[e(a,{provider:"iconify",name:"vscode-icons:file-type-shell"})]),_:1}),e(s,{type:"file",filename:".zshenv",level:1},{icon:i(()=>[e(a,{provider:"iconify",name:"vscode-icons:default-file"})]),_:1}),e(s,{expanded:"",type:"folder",filename:".config",level:1},{icon:i(()=>[e(a,{provider:"iconify",name:"vscode-icons:folder-type-config"})]),default:i(()=>[e(s,{expanded:"",type:"folder",filename:"zsh",level:2},{icon:i(()=>[e(a,{provider:"iconify",name:"vscode-icons:default-folder"})]),default:i(()=>[e(s,{type:"file",filename:"...",level:3})]),_:1})]),_:1})]),_:1}),e(s,{expanded:"",type:"folder",filename:"git",level:0},{icon:i(()=>[e(a,{provider:"iconify",name:"vscode-icons:default-folder"})]),default:i(()=>[e(s,{type:"file",filename:".gitconfig",level:1},{icon:i(()=>[e(a,{provider:"iconify",name:"vscode-icons:file-type-git"})]),_:1})]),_:1}),e(s,{expanded:"",type:"folder",filename:"nvim",level:0},{icon:i(()=>[e(a,{provider:"iconify",name:"vscode-icons:default-folder"})]),default:i(()=>[e(s,{expanded:"",type:"folder",filename:".config",level:1},{icon:i(()=>[e(a,{provider:"iconify",name:"vscode-icons:folder-type-config"})]),default:i(()=>[e(s,{expanded:"",type:"folder",filename:"nvim",level:2},{icon:i(()=>[e(a,{provider:"iconify",name:"vscode-icons:default-folder"})]),default:i(()=>[e(s,{type:"file",filename:"...",level:3})]),_:1})]),_:1})]),_:1})]),t[2]||(t[2]=l('<p>这样就将配置文件全部集中到一个文件夹中，方便管理，之后可以使用 <code>stow package</code> 来加载对应的配置文件。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>由于不同软件的配置文件之间可以存在一定的依赖关系，使用这种方法管理的不同配置文件之间难以保证完全地独立性， 因此是否要使用 GNU/Stow 来管理用户配置文件，还是取决于个人的使用习惯和需求。</p><p>此外，一些软件的配置文件相对比较复杂，例如 <code>neovim</code>，更推荐用一个专门的仓库来管理它。</p></div><h2 id="相关链接" tabindex="-1"><a class="header-anchor" href="#相关链接"><span>相关链接</span></a></h2><ul><li><a href="https://www.gnu.org/software/stow/" target="_blank" rel="noopener noreferrer">GNU/Stow 官网</a></li><li><a href="https://www.gnu.org/software/stow/manual/stow.html" target="_blank" rel="noopener noreferrer">GNU/Stow 用户手册</a></li></ul>',4))])}const m=d(h,[["render",k]]),u=JSON.parse('{"path":"/article/2xg2t5km/","title":"GNU/Stow —— 管理编译安装程序与用户配置文件","lang":"zh-CN","frontmatter":{"title":"GNU/Stow —— 管理编译安装程序与用户配置文件","createTime":"2025/07/17 22:28:56","permalink":"/article/2xg2t5km/","tags":["实用工具","终端","GNU"],"description":"什么是 GNU/Stow？ GNU Stow 是一个符号链接农场管理器，它可以将位于文件系统不同目录中的不同软件包和数据，伪装成安装在同一个位置。 使用 GNU/Stow 这一简单的工具，可以帮我们实现 Linux 上的两大难题： 管理手动编译安装的程序 管理复杂的用户配置文件 安装 各大发行版的包管理器都有 GNU/Stow，不过我更推荐直接从官网下...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"GNU/Stow —— 管理编译安装程序与用户配置文件\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-18T06:44:08.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://sunirein.tech/article/2xg2t5km/"}],["meta",{"property":"og:site_name","content":"SuniRein 的个人小站"}],["meta",{"property":"og:title","content":"GNU/Stow —— 管理编译安装程序与用户配置文件"}],["meta",{"property":"og:description","content":"什么是 GNU/Stow？ GNU Stow 是一个符号链接农场管理器，它可以将位于文件系统不同目录中的不同软件包和数据，伪装成安装在同一个位置。 使用 GNU/Stow 这一简单的工具，可以帮我们实现 Linux 上的两大难题： 管理手动编译安装的程序 管理复杂的用户配置文件 安装 各大发行版的包管理器都有 GNU/Stow，不过我更推荐直接从官网下..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-18T06:44:08.000Z"}],["meta",{"property":"article:tag","content":"GNU"}],["meta",{"property":"article:tag","content":"终端"}],["meta",{"property":"article:tag","content":"实用工具"}],["meta",{"property":"article:modified_time","content":"2025-07-18T06:44:08.000Z"}]]},"readingTime":{"minutes":3.19,"words":957},"git":{"createdTime":1752821048000,"updatedTime":1752821048000,"contributors":[{"name":"SuniRein","username":"SuniRein","email":"sunirein@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/SuniRein?v=4","url":"https://github.com/SuniRein"}]},"autoDesc":true,"filePathRelative":"实用工具推荐/stow.md","headers":[],"categoryList":[{"id":"cdaa07","sort":10006,"name":"实用工具推荐"}]}');export{m as comp,u as data};
